import ...messages as messages
import ...util.bitmaps show lightbug4040

// TODO these should be defined elsewhere
SCREEN_WIDTH := 250
SCREEN_HEIGHT := 122

// A set of predefined messages that can be shown as buttons on the web page
sample-messages := {
    "Getters": {
        "$(messages.LastPosition.MT) Location": (messages.LastPosition.getMsg).bytesForProtocol,
        "$(messages.Status.MT) Status": (messages.Status.getMsg).bytesForProtocol,
        "$(messages.DeviceIds.MT) Device IDs": (messages.DeviceIds.getMsg).bytesForProtocol,
        "$(messages.DeviceTime.MT) Time": (messages.DeviceTime.getMsg).bytesForProtocol,
        "$(messages.Temperature.MT) Temperature": (messages.Temperature.getMsg).bytesForProtocol,
        "$(messages.Pressure.MT) Pressure": (messages.Pressure.getMsg).bytesForProtocol,
        "$(messages.BatteryStatus.MT) Battery": (messages.BatteryStatus.getMsg).bytesForProtocol,
    },
    "Actions": {
        "$(messages.TxNow.MT) Transmit Now": (messages.TxNow.doMsg --data="hello".to-byte-array).bytesForProtocol,
    },
    "Screen": {
        "$(messages.PresetPage.MT) Home page": messages.PresetPage.getMsg.bytesForProtocol,
        "$(messages.MenuPage.MT) Menu 3 items": (messages.MenuPage.toMsg --pageId=101 --items=["Option 1", "Option 2", "Option 3"]).bytesForProtocol,
        "$(messages.TextPage.MT) Text page": (messages.TextPage.toMsg --pageId=102 --pageTitle="Page 101" --line1="First Line" --line2="Second Line").bytesForProtocol,
        "$(messages.DrawBitmap.MT) Lightbug Logo": (messages.DrawBitmap.toMsg --pageId=103 --bitmapData=lightbug4040 --bitmapHeight=40 --bitmapWidth=40).bytesForProtocol,
        // TODO this should be able to overlay a logo on a page (whatever page is being displayed) if not pageid is set
        // "$(messages.DrawBitmap.MT) Overlay Logo": (messages.DrawBitmap.toMsg --bitmapData=lightbug4040 --bitmapHeight=40 --bitmapWidth=40 --bitmapOverlay=true --bitmapX=(SCREEN_WIDTH - 40) --bitmapY=(SCREEN_HEIGHT - 40)).bytesForProtocol,
    },
    "$(messages.HapticsControl.MT) Haptics": {
        "Pattern 1, low intensity": (messages.HapticsControl.doMsg messages.HapticsControl.PATTERN_1 messages.HapticsControl.INTENSITY-LOW).bytesForProtocol,
        "Pattern 2, low intensity": (messages.HapticsControl.doMsg messages.HapticsControl.PATTERN_2 messages.HapticsControl.INTENSITY-LOW).bytesForProtocol,
        "Pattern 3, low intensity": (messages.HapticsControl.doMsg messages.HapticsControl.PATTERN_3 messages.HapticsControl.INTENSITY-LOW).bytesForProtocol,
    },
    "$(messages.BuzzerControl.MT) Buzzer": {
        "20ms, 0.5khz": (messages.BuzzerControl.doMsg --duration=20 --frequency=0.5 ).bytesForProtocol,
        "200ms, 1khz": (messages.BuzzerControl.doMsg --duration=200 --frequency=1.0 ).bytesForProtocol,
        "1s, Ambulance": (messages.BuzzerControl.doMsg --duration=1000 --soundType=messages.BuzzerControl.SOUND_AMBULANCE --intensity=1 ).bytesForProtocol,
    },
    "$(messages.AlarmControl.MT) Alarm": {
        "Duration 0": (messages.AlarmControl.doMsg --duration=0).bytesForProtocol,
        "3s pattern 4 intensity 1": (messages.AlarmControl.doMsg --duration=3 --buzzerPattern=4 --buzzerIntensity=1).bytesForProtocol,
    },
    // "GSM": {
    //     "SET Normal mode": #[0x03, 0x17, 0x00, 0x31, 0x00, 0x01, 0x00, 0x05, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x75, 0x30],
    //     "SET Airplane mode 10s": #[0x03, 0x23, 0x00, 0x31, 0x00, 0x01, 0x00, 0x05, 0x01, 0x01, 0x02, 0x00, 0x01, 0x02, 0x01, 0x00, 0x04, 0x0A, 0x00, 0x00, 0x00, 0x38, 0x8B],
    //     "GET CFUN": #[0x03, 0x14, 0x00, 0x31, 0x00, 0x01, 0x00, 0x05, 0x01, 0x02, 0x00, 0x00, 0xAD, 0x1E],
    // },
    // "Location": {
    //     "RTK ON": #[0x03, 0x17, 0x00, 0x39, 0x00, 0x01, 0x00, 0x05, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x01, 0x13, 0x5C],
    //     "RTK OFF": #[0x03, 0x17, 0x00, 0x39, 0x00, 0x01, 0x00, 0x05, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01, 0x02, 0x70, 0x6C],
    // },
    // "Preset pages": {
    //     "Default": #[0x03, 0x0E, 0x00, 0x24, 0x27, 0x01, 0x00, 0x01, 0x01, 0x2B, 0x00, 0x00, 0x27, 0x82],
    // },
    // "Text pages": {
    //     "Page 101: Title and line 1": #[0x03, 0x29, 0x00, 0x25, 0x27, 0x01, 0x00, 0x01, 0x01, 0xE9, 0x03, 0x00, 0x03, 0x04, 0x64, 0x01, 0x65, 0x0A, 0x50, 0x61, 0x67, 0x65, 0x20, 0x54, 0x69, 0x74, 0x6C, 0x65, 0x0A, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x4C, 0x69, 0x6E, 0x65, 0x90, 0xD7],
    //     "Page 101: line 2": #[0x03, 0x1E, 0x00, 0x25, 0x27, 0x01, 0x00, 0x01, 0x01, 0xE9, 0x02, 0x00, 0x03, 0x65, 0x01, 0x65, 0x0B, 0x53, 0x65, 0x63, 0x6F, 0x6E, 0x64, 0x20, 0x4C, 0x69, 0x6E, 0x65, 0x32, 0x18],
    //     "Page 101: clear all lines": #[0x03, 0x1B, 0x00, 0x25, 0x27, 0x01, 0x00, 0x01, 0x01, 0xE9, 0x06, 0x00, 0x03, 0x65, 0x64, 0x66, 0x68, 0x67, 0x01, 0x65, 0x00, 0x00, 0x00, 0x00, 0xF4, 0x47],
    // },
    // "Menu pages": {
    //     "Page 102: 2 options": #[0x03, 0x20, 0x00, 0x26, 0x27, 0x01, 0x00, 0x01, 0x01, 0xBA, 0x04, 0x00, 0x03, 0x64, 0x65, 0x02, 0x01, 0x66, 0x04, 0x6F, 0x70, 0x74, 0x31, 0x04, 0x6F, 0x70, 0x74, 0x32, 0x01, 0x02, 0x1F, 0x0E],
    //     "Page 102: change opt 2": #[0x03, 0x28, 0x00, 0x26, 0x27, 0x01, 0x00, 0x01, 0x01, 0xBA, 0x04, 0x00, 0x03, 0x64, 0x65, 0x02, 0x01, 0x66, 0x04, 0x6F, 0x70, 0x74, 0x31, 0x0C, 0x6F, 0x70, 0x74, 0x32, 0x20, 0x63, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x64, 0x01, 0x02, 0xD2, 0x1B],
    //     "Page 103: 2 options (selected 2nd)": #[0x03, 0x23, 0x00, 0x26, 0x27, 0x01, 0x00, 0x01, 0x01, 0xBA, 0x05, 0x00, 0x03, 0x64, 0x65, 0x02, 0x05, 0x01, 0x67, 0x04, 0x6F, 0x70, 0x74, 0x31, 0x04, 0x6F, 0x70, 0x74, 0x32, 0x01, 0x02, 0x01, 0x01, 0x6B, 0x91],
    // },
}